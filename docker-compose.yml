version: '3'

networks:
  pipeline-network:
    driver: bridge

volumes:
  pulsar_data:
  valkey_data:
  duckdb_data:

services:
  pipeline:
    build:
      context: ./pipeline
      dockerfile: Dockerfile
    ports:
      - "4195:4195"  # HTTP API + Prometheus metrics
    # environment:
    #   - VALKEY_URL=valkey:6379
    #   - PULSAR_URL=pulsar://pulsar:6650
    #   - PULSAR_TOPIC=transactions
    #   - SNOWTRACE_API_KEY=${SNOWTRACE_API_KEY}
    #   - CHAIN_ID=${CHAIN_ID}
    env_file: ".env"
    volumes:
      - ./config.yaml:/app/config.yaml
    restart: unless-stopped
    networks:
      - pipeline-network
    depends_on:
      - valkey
      - pulsar
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4195/ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  valkey:
    image: valkey/valkey:8-alpine3.21
    ports:
      - "6379:6379"
    volumes:
      - valkey_data:/data
    command: valkey-server --appendonly yes
    networks:
      - pipeline-network
    healthcheck:
      test: ["CMD", "valkey-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  pulsar:
    image: apachepulsar/pulsar:4.0.4
    container_name: pulsar
    command:
      - "bash"
      - "-c"
      - |
        bin/pulsar standalone \
          --no-functions-worker \
          --wipe-data
    environment:
      PULSAR_MEM: "-Xms1g -Xmx1g -XX:MaxDirectMemorySize=512m"
    ports:
      - "6650:6650"   # Pulsar binary protocol
      - "8080:8080"   # Pulsar REST API
    networks:
      - pipeline-network
    logging:
      driver: "none"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/admin/v2/clusters"]
      interval: 30s
      timeout: 20s
      retries: 3

  streamlit:
    build:
      context: ./dashboard
      dockerfile: Dockerfile
    ports:
      - "8501:8501"
    environment:
      - VALKEY_URL=valkey:6379
      - PULSAR_URL=pulsar://pulsar:6650
      - PULSAR_TOPIC=transactions
    volumes:
      - ./streamlit/ekko-dash:/app
      - duckdb_data:/data
    networks:
      - pipeline-network
    depends_on:
      - valkey
      - pulsar
      - pipeline

  ekko-processor:
    build:
      context: ./streamlit/ekko-dash
      dockerfile: Dockerfile
    command: python alert_processor_service.py
    env_file: .env
    volumes:
      - ./streamlit/ekko-dash:/app
    restart: unless-stopped
    networks:
      - pipeline-network
    depends_on:
      - valkey
      - pulsar
      - streamlit

  # pulsar-manager:
  #   image: apachepulsar/pulsar-manager:v0.2.0
  #   ports:
  #     - "7750:7750"    # Manager UI
  #     - "9527:9527"    # Manager API
  #   environment:
  #     - SPRING_PROFILES_ACTIVE=h2
  #     - PULSAR_MANAGER_PULSAR_SERVICE_URL=pulsar://pulsar:6650
  #     - PULSAR_MANAGER_PULSAR_ADMIN_URL=http://pulsar:8080
  #     - REDIRECT_HOST=0.0.0.0
  #     - REDIRECT_PORT=9527
  #     - DRIVER_CLASS_NAME=org.h2.Driver
  #     - URL=jdbc:h2:mem:testdb
  #     - USERNAME=sa
  #     - PASSWORD=
  #     - LOG_LEVEL=INFO
  #   networks:
  #     - pipeline-network
  #   depends_on:
  #     - pulsar