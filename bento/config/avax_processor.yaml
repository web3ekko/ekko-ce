input:
  websocket_server:
    path: /ws/avax
    
pipeline:
  processors:
    # First analyze the transaction type
    - branch:
        processors:
          # C-Chain token transfers
          - avax_token_transfer:
              network: c-chain
          # X-Chain token transfers
          - avax_token_transfer:
              network: x-chain
          # DEX swaps (C-Chain only)
          - avax_dex_swap:
              network: c-chain
        
    # Add metadata about the chain
    - metadata:
        operator: set
        key: chain
        value: avalanche
    
    # Add timestamp
    - metadata:
        operator: set
        key: timestamp
        value: ${!timestamp_unix()}
    
output:
  broker:
    pattern: fan_out
    outputs:
      # Store in MinIO
      - s3:
          bucket: transactions
          path: ${!meta("chain")}/${!timestamp_unix() | date_format("2006/01/02")}/${!json("hash")}.json
          endpoint: http://minio:9000
          credentials:
            id: ${MINIO_ACCESS_KEY}
            secret: ${MINIO_SECRET_KEY}
      
      # Publish to Redis for real-time updates
      - redis_pubsub:
          url: ${REDIS_URL:redis://localhost:6379}
          channel: avax_transactions
    
logger:
  level: INFO
  format: json
